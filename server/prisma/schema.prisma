generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Privacy {
    PUBLIC
    PRIVATE
    FRIENDS
}

enum FriendRequestStatus {
    PENDING
    ACCEPTED
}

model User {
    id        String    @id @default(uuid())
    email     String    @unique
    username  String    @unique
    password  String    @default("")
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    sessions  Session[]
    profileId String    @unique
    profile   Profile   @relation(fields: [profileId], references: [id])
}

model Session {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    userId    String
    user      User     @relation(fields: [userId], references: [id])
}

model Profile {
    id          String   @id @default(uuid())
    displayname String
    bio         String
    updatedAt   DateTime @updatedAt
    privacy     Privacy  @default(PRIVATE)
    user        User?
    friendsTo Friends[] @relation("FriendsTo")
    friendsOf Friends[] @relation("FriendsOf")
}

model Friends {
    id        String              @id @default(uuid())
    status    FriendRequestStatus @default(PENDING)
    createdAt DateTime            @default(now())
    userId    String
    friendId  String
    user      Profile                @relation(fields: [userId], references: [id], name: "FriendsTo")
    friend    Profile                @relation(fields: [friendId], references: [id], name: "FriendsOf")
}
